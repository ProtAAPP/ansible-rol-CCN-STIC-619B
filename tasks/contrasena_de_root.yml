---
- name: Configurar la caducidad de la clave de root
  become: true
  ansible.builtin.shell: |
    grep "root:[^:]*:[0-9]*:2:{{ pass_max_days }}:10:" /etc/shadow > /dev/null 2>&1
    if [ $? -eq 1 ]
    then
      /usr/bin/chage -m 2 -M {{ pass_max_days }} -W 10 root
      echo $?
    fi
  register: root_pass_change_params
  changed_when: root_pass_change_params.stdout == "0"

- name: Obtener parámetros de password de root
  become: true
  ansible.builtin.command: /usr/bin/chage -l root
  register: chage_root_output
  changed_when: false

- name: Mostrar parámetros de password de root
  ansible.builtin.debug:
    var: chage_root_output.stdout_lines
  when: chage_root_output.stdout != ""

# A partir de ansible-core 2.16 se puede usar el módulo user para configurar todos los parámetros de las claves de usuario
# - name: Configurar parámetros de caducidad de la clave de root
#   ansible.builtin.user:
#     name: root
#     password_expire_max: "{{ pass_max_days }}"
#     password_expire_min: 2
#     password_expire_warn: 10
#   notify:
#    - Obtener_parametros_de_password_de_root

- name: Comprobar si la contraseña de root es segura
  become: true
  ansible.builtin.shell: |
    test $(awk -F: '$1 == "root" && $2 ~ /^\$6\$/ {print $2}' /etc/shadow)
  register: algoritmo_password_root
  failed_when: false
  changed_when: algoritmo_password_root.rc != 0
  check_mode: false

- name: Configurar contraseña de root
  ansible.builtin.include_tasks: contrasena_de_root_configurar.yml
  when: algoritmo_password_root.changed
